#!/usr/bin/env bash

BIN=${0##*/}

# check if `ncc` is installed
if ! hash ncc 2>/dev/null
then
  echo "[$BIN] missing executable 'ncc', make sure it's installed:"
  echo
  echo '$ npm install -g @vercel/ncc'
  echo
  exit 1
fi

# check commandline arguments
if [[ $# -eq 0 ]]
then
  echo "Use: $BIN package [ImportA ImportB...]"
  echo ""
  echo "E.g. $BIN lodash flattenDeep cloneDeep"
  echo ""
  exit 1
fi

# extract package name and its final directory
package=$1
shift
packagedir=${package%%/*}

# check if package directory already exists
if [[ -d "$packagedir" ]]
then
  echo "[$BIN] package destination './$packagedir/' already exists."
  exit 2
fi

# create temporary directory
tmpdir="$TMP/module-bundler-$RANDOM"
mkdir "$tmpdir" || exit 3

# clean up after we're done
trap "rm -fr $tmpdir" EXIT

# save cwd and switch to temporary directory
pushd "$tmpdir" >/dev/null || exit 4

# install package 
npm i "$package" --omit=dev || exit 5

# create the bundle package
mkdir -p "$package" || exit 6

# create module wrapper (dep
if [[ $# -eq 0 ]]
then
  echo "module.exports = require('$package');" > index.js
else
  for import in $@
  do
    echo "module.exports.$import = require('$package').$import;"
  done > index.js
fi

# build the bundle
ncc build --minify --quiet index.js --out "$package" || exit 7

# move back to previous cwd
popd 2>/dev/null

# move the bundled package
mv "$tmpdir/$packagedir" .

# done
echo
echo "[$BIN] bundled '$package' to ./$packagedir/"
